{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { emailValidator, passwordValidator, confirmPasswordValidator, fileValidator, titleValidator } from '../utils/validation/validator';\nexport const useValidateForm = () => {\n  _s();\n  const [errors, setErrors] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    file: '',\n    title: '',\n    isValid: true\n  });\n  const validateForm = formValues => {\n    if (formValues.email) {\n      let error = emailValidator(formValues.email);\n      if (error) {\n        console.log(error);\n        setErrors(err => ({\n          ...err,\n          email: {\n            ...err.email,\n            isValid: false,\n            error\n          }\n        }));\n      }\n    }\n    if (formValues.password) {\n      let error = passwordValidator(formValues.password);\n      if (error) {\n        console.log(error);\n        setErrors(err => ({\n          ...err,\n          password: {\n            ...err.password,\n            isValid: false,\n            error\n          }\n        }));\n      }\n    }\n    if (formValues.confirmPassword) {\n      let error = confirmPasswordValidator(formValues.password, formValues.confirmPassword);\n      if (error) {\n        setErrors(err => ({\n          ...err,\n          confirmPassword: {\n            ...err.confirmPassword,\n            isValid: false,\n            error\n          }\n        }));\n      }\n    }\n    if (formValues.file) {\n      let error = fileValidator(formValues.file);\n      if (error) {\n        setErrors(err => ({\n          ...err,\n          [err.file.isValid]: false\n        }));\n      }\n    }\n    if (formValues.title) {\n      let error = titleValidator(formValues.title);\n      if (error) {\n        setErrors(err => ({\n          ...err,\n          [err.title]: false\n        }));\n      }\n    }\n  };\n  return {\n    errors,\n    validateForm\n  };\n};\n_s(useValidateForm, \"y1F6/iilmsfjXmU7x+hs95gGlO8=\");","map":{"version":3,"names":["useState","emailValidator","passwordValidator","confirmPasswordValidator","fileValidator","titleValidator","useValidateForm","_s","errors","setErrors","email","password","confirmPassword","file","title","isValid","validateForm","formValues","error","console","log","err"],"sources":["C:/Users/Niki/Documents/Softuni/React/photo-sharing-app/client/src/hooks/useValidateForm.js"],"sourcesContent":["import { useState } from 'react'\r\n\r\nimport {\r\n    emailValidator,\r\n    passwordValidator,\r\n    confirmPasswordValidator,\r\n    fileValidator,\r\n    titleValidator\r\n} from '../utils/validation/validator';\r\n\r\nexport const useValidateForm = () => {\r\n\r\n    const [errors, setErrors] = useState({\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        file: '',\r\n        title: '',\r\n        isValid: true\r\n\r\n    });\r\n\r\n    const validateForm = (formValues) => {\r\n\r\n\r\n        if (formValues.email) {\r\n            let error = emailValidator(formValues.email);\r\n\r\n            if (error) {\r\n                console.log(error);\r\n                setErrors(err => ({ ...err, email: ({ ...err.email, isValid: false, error }) }))\r\n            }\r\n        }\r\n        if (formValues.password) {\r\n            let error = passwordValidator(formValues.password);\r\n            if (error) {\r\n                console.log(error);\r\n                setErrors(err => ({ ...err, password: ({ ...err.password, isValid: false, error }) }))\r\n            }\r\n        }\r\n        if (formValues.confirmPassword) {\r\n\r\n            let error = confirmPasswordValidator(formValues.password, formValues.confirmPassword);\r\n            if (error) {\r\n                setErrors(err => ({ ...err, confirmPassword: ({ ...err.confirmPassword, isValid: false, error }) }))\r\n            }\r\n        }\r\n        if (formValues.file) {\r\n            let error = fileValidator(formValues.file);\r\n            if (error) {\r\n                setErrors(err => ({ ...err, [err.file.isValid]: false }))\r\n            }\r\n        }\r\n        if (formValues.title) {\r\n            let error = titleValidator(formValues.title);\r\n            if (error) {\r\n                setErrors(err => ({ ...err, [err.title]: false }))\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        errors,\r\n        validateForm\r\n    };\r\n\r\n};"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SACIC,cAAc,EACdC,iBAAiB,EACjBC,wBAAwB,EACxBC,aAAa,EACbC,cAAc,QACX,+BAA+B;AAEtC,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC;IACjCU,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE,EAAE;IACnBC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EAEb,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,UAAU,IAAK;IAGjC,IAAIA,UAAU,CAACP,KAAK,EAAE;MAClB,IAAIQ,KAAK,GAAGjB,cAAc,CAACgB,UAAU,CAACP,KAAK,CAAC;MAE5C,IAAIQ,KAAK,EAAE;QACPC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClBT,SAAS,CAACY,GAAG,KAAK;UAAE,GAAGA,GAAG;UAAEX,KAAK,EAAG;YAAE,GAAGW,GAAG,CAACX,KAAK;YAAEK,OAAO,EAAE,KAAK;YAAEG;UAAM;QAAG,CAAC,CAAC,CAAC;MACpF;IACJ;IACA,IAAID,UAAU,CAACN,QAAQ,EAAE;MACrB,IAAIO,KAAK,GAAGhB,iBAAiB,CAACe,UAAU,CAACN,QAAQ,CAAC;MAClD,IAAIO,KAAK,EAAE;QACPC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClBT,SAAS,CAACY,GAAG,KAAK;UAAE,GAAGA,GAAG;UAAEV,QAAQ,EAAG;YAAE,GAAGU,GAAG,CAACV,QAAQ;YAAEI,OAAO,EAAE,KAAK;YAAEG;UAAM;QAAG,CAAC,CAAC,CAAC;MAC1F;IACJ;IACA,IAAID,UAAU,CAACL,eAAe,EAAE;MAE5B,IAAIM,KAAK,GAAGf,wBAAwB,CAACc,UAAU,CAACN,QAAQ,EAAEM,UAAU,CAACL,eAAe,CAAC;MACrF,IAAIM,KAAK,EAAE;QACPT,SAAS,CAACY,GAAG,KAAK;UAAE,GAAGA,GAAG;UAAET,eAAe,EAAG;YAAE,GAAGS,GAAG,CAACT,eAAe;YAAEG,OAAO,EAAE,KAAK;YAAEG;UAAM;QAAG,CAAC,CAAC,CAAC;MACxG;IACJ;IACA,IAAID,UAAU,CAACJ,IAAI,EAAE;MACjB,IAAIK,KAAK,GAAGd,aAAa,CAACa,UAAU,CAACJ,IAAI,CAAC;MAC1C,IAAIK,KAAK,EAAE;QACPT,SAAS,CAACY,GAAG,KAAK;UAAE,GAAGA,GAAG;UAAE,CAACA,GAAG,CAACR,IAAI,CAACE,OAAO,GAAG;QAAM,CAAC,CAAC,CAAC;MAC7D;IACJ;IACA,IAAIE,UAAU,CAACH,KAAK,EAAE;MAClB,IAAII,KAAK,GAAGb,cAAc,CAACY,UAAU,CAACH,KAAK,CAAC;MAC5C,IAAII,KAAK,EAAE;QACPT,SAAS,CAACY,GAAG,KAAK;UAAE,GAAGA,GAAG;UAAE,CAACA,GAAG,CAACP,KAAK,GAAG;QAAM,CAAC,CAAC,CAAC;MACtD;IACJ;EACJ,CAAC;EAED,OAAO;IACHN,MAAM;IACNQ;EACJ,CAAC;AAEL,CAAC;AAACT,EAAA,CAxDWD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}