{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { emailValidator, passwordValidator, confirmPasswordValidator, fileValidator, titleValidator, usernameValidator } from '../utils/validation/validator';\nexport const useValidateForm = () => {\n  _s();\n  const [errors, setErrors] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    file: '',\n    title: '',\n    username: ''\n  });\n  const validateForm = formValues => {\n    let isValid = true;\n    if (formValues.email) {\n      let error = emailValidator(formValues.email);\n      if (error) {\n        isValid = false;\n        setErrors(err => ({\n          ...err,\n          email: error\n        }));\n      }\n    }\n    if (formValues.password) {\n      let error = passwordValidator(formValues.password);\n      if (error) {\n        isValid = false;\n        setErrors(err => ({\n          ...err,\n          password: error\n        }));\n      }\n    }\n    if (formValues.confirmPassword) {\n      let error = confirmPasswordValidator(formValues.password, formValues.confirmPassword);\n      if (error) {\n        isValid = false;\n        setErrors(err => ({\n          ...err,\n          confirmPassword: error\n        }));\n      }\n    }\n    if (formValues.file) {\n      let error = fileValidator(formValues.file);\n      if (error) {\n        isValid = false;\n        setErrors(err => ({\n          ...err,\n          [err.file.isValid]: false\n        }));\n      }\n    }\n    if (formValues.title) {\n      let error = titleValidator(formValues.title);\n      if (error) {\n        isValid = false;\n        setErrors(err => ({\n          ...err,\n          [err.title]: false\n        }));\n      }\n    }\n    if (formValues.username) {\n      let error = usernameValidator(formValues.username);\n      if (error) {\n        isValid = false;\n        setErrors(err => ({\n          ...err,\n          username: error\n        }));\n      }\n    }\n    return isValid;\n  };\n  return {\n    errors,\n    validateForm\n  };\n};\n_s(useValidateForm, \"lnaUG1lgu0J9JtLTGt2tT7Y5rDw=\");","map":{"version":3,"names":["useState","emailValidator","passwordValidator","confirmPasswordValidator","fileValidator","titleValidator","usernameValidator","useValidateForm","_s","errors","setErrors","email","password","confirmPassword","file","title","username","validateForm","formValues","isValid","error","err"],"sources":["C:/Users/Niki/Documents/Softuni/React/photo-sharing-app/client/src/hooks/useValidateForm.js"],"sourcesContent":["import { useState } from 'react'\r\n\r\nimport {\r\n    emailValidator,\r\n    passwordValidator,\r\n    confirmPasswordValidator,\r\n    fileValidator,\r\n    titleValidator,\r\n    usernameValidator\r\n} from '../utils/validation/validator';\r\n\r\nexport const useValidateForm = () => {\r\n\r\n    const [errors, setErrors] = useState({\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        file: '',\r\n        title: '',\r\n        username: '',\r\n    });\r\n\r\n\r\n\r\n\r\n    const validateForm = (formValues) => {\r\n\r\n        let isValid = true;\r\n\r\n        if (formValues.email) {\r\n            let error = emailValidator(formValues.email);\r\n\r\n            if (error) {\r\n                isValid = false;\r\n                setErrors(err => ({ ...err, email: error }))\r\n            }\r\n        }\r\n        if (formValues.password) {\r\n            let error = passwordValidator(formValues.password);\r\n            if (error) {\r\n                isValid = false;\r\n                setErrors(err => ({ ...err, password: error }))\r\n            }\r\n        }\r\n        if (formValues.confirmPassword) {\r\n\r\n            let error = confirmPasswordValidator(formValues.password, formValues.confirmPassword);\r\n            if (error) {\r\n                isValid = false;\r\n\r\n                setErrors(err => ({ ...err, confirmPassword: error }))\r\n            }\r\n        }\r\n        if (formValues.file) {\r\n            let error = fileValidator(formValues.file);\r\n            if (error) {\r\n                isValid = false;\r\n                setErrors(err => ({ ...err, [err.file.isValid]: false }))\r\n            }\r\n        }\r\n        if (formValues.title) {\r\n            let error = titleValidator(formValues.title);\r\n            if (error) {\r\n                isValid = false;\r\n                setErrors(err => ({ ...err, [err.title]: false }))\r\n            }\r\n        }\r\n        if (formValues.username) {\r\n            let error = usernameValidator(formValues.username);\r\n            if (error) {\r\n                isValid = false;\r\n                setErrors(err => ({ ...err, username: error }))\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    return {\r\n        errors,\r\n        validateForm\r\n    };\r\n\r\n};"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SACIC,cAAc,EACdC,iBAAiB,EACjBC,wBAAwB,EACxBC,aAAa,EACbC,cAAc,EACdC,iBAAiB,QACd,+BAA+B;AAEtC,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC;IACjCW,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE,EAAE;IACnBC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC,CAAC;EAKF,MAAMC,YAAY,GAAIC,UAAU,IAAK;IAEjC,IAAIC,OAAO,GAAG,IAAI;IAElB,IAAID,UAAU,CAACP,KAAK,EAAE;MAClB,IAAIS,KAAK,GAAGnB,cAAc,CAACiB,UAAU,CAACP,KAAK,CAAC;MAE5C,IAAIS,KAAK,EAAE;QACPD,OAAO,GAAG,KAAK;QACfT,SAAS,CAACW,GAAG,KAAK;UAAE,GAAGA,GAAG;UAAEV,KAAK,EAAES;QAAM,CAAC,CAAC,CAAC;MAChD;IACJ;IACA,IAAIF,UAAU,CAACN,QAAQ,EAAE;MACrB,IAAIQ,KAAK,GAAGlB,iBAAiB,CAACgB,UAAU,CAACN,QAAQ,CAAC;MAClD,IAAIQ,KAAK,EAAE;QACPD,OAAO,GAAG,KAAK;QACfT,SAAS,CAACW,GAAG,KAAK;UAAE,GAAGA,GAAG;UAAET,QAAQ,EAAEQ;QAAM,CAAC,CAAC,CAAC;MACnD;IACJ;IACA,IAAIF,UAAU,CAACL,eAAe,EAAE;MAE5B,IAAIO,KAAK,GAAGjB,wBAAwB,CAACe,UAAU,CAACN,QAAQ,EAAEM,UAAU,CAACL,eAAe,CAAC;MACrF,IAAIO,KAAK,EAAE;QACPD,OAAO,GAAG,KAAK;QAEfT,SAAS,CAACW,GAAG,KAAK;UAAE,GAAGA,GAAG;UAAER,eAAe,EAAEO;QAAM,CAAC,CAAC,CAAC;MAC1D;IACJ;IACA,IAAIF,UAAU,CAACJ,IAAI,EAAE;MACjB,IAAIM,KAAK,GAAGhB,aAAa,CAACc,UAAU,CAACJ,IAAI,CAAC;MAC1C,IAAIM,KAAK,EAAE;QACPD,OAAO,GAAG,KAAK;QACfT,SAAS,CAACW,GAAG,KAAK;UAAE,GAAGA,GAAG;UAAE,CAACA,GAAG,CAACP,IAAI,CAACK,OAAO,GAAG;QAAM,CAAC,CAAC,CAAC;MAC7D;IACJ;IACA,IAAID,UAAU,CAACH,KAAK,EAAE;MAClB,IAAIK,KAAK,GAAGf,cAAc,CAACa,UAAU,CAACH,KAAK,CAAC;MAC5C,IAAIK,KAAK,EAAE;QACPD,OAAO,GAAG,KAAK;QACfT,SAAS,CAACW,GAAG,KAAK;UAAE,GAAGA,GAAG;UAAE,CAACA,GAAG,CAACN,KAAK,GAAG;QAAM,CAAC,CAAC,CAAC;MACtD;IACJ;IACA,IAAIG,UAAU,CAACF,QAAQ,EAAE;MACrB,IAAII,KAAK,GAAGd,iBAAiB,CAACY,UAAU,CAACF,QAAQ,CAAC;MAClD,IAAII,KAAK,EAAE;QACPD,OAAO,GAAG,KAAK;QACfT,SAAS,CAACW,GAAG,KAAK;UAAE,GAAGA,GAAG;UAAEL,QAAQ,EAAEI;QAAM,CAAC,CAAC,CAAC;MACnD;IACJ;IACA,OAAOD,OAAO;EAClB,CAAC;EAED,OAAO;IACHV,MAAM;IACNQ;EACJ,CAAC;AAEL,CAAC;AAACT,EAAA,CAvEWD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}